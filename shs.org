# -*- mode: org; -*-
#+TITLE: Science technologie et société A
#+SETUPFILE: htmlnotes.setup

* Week 1
- logiciels parties intégrantes de la société, font partie de la vie et de la culture. êtres logiciels.
- Peu pris en compte dans la société. Effets sociaux ? Qui/quoi influence leur conception, fabrication, expansion, distribution ?

** Software studies
- être logiciel :
  - Complexité car multiplicité lors de la création, comportement innatendu, etc.
- Deux processus de gestation :
  - La façon dont les logiciels ont été façonnés
  - Dynamique d'expansion et d'usage
- Culture informatique
  - Plus loin que juste le code/la technicité, histoire de construction, d'industrie, de changements
  - Rapprocher les experts en info et les utilisateurs
- Nombreux enjeux politiques par rapport aux choix faits en informatique

** Contenu du cours
- Histoires de formations logicielles
- Economies et cultures logicielles
- Pratique et consommation logicielles
- Compostantes logicielles
- Constructions et conceptions logicielles
* Week 2
** Fait d'actualité : Wolkswagen triche sur ses test d'émissions de Diesel
 - logiciel "espion" qui permettait de tricher
   - Fait la différence entre test réel et test en laboratoire
 - Raisons possibles/mobile ?
   - Normes de l'EPA, difficiles à atteindre, plutôt faite pour moteurs américains
 - Questions ?
   - Concurrents l'ont-ils découvert ? Font la même chose ?
   - Quantités d'immension de gaz testées en laboratoire, ceci remet en cause ces tests ?
   - Qu'en est-il d'aute logiciels placés dans d'autres objets ? Prolifération
     potentielle de logiciels agissant à l'insu de l'utilisateur.
     - Question politique : Faut-il réguler ce genre de question ? Logiciel pas
       considéré comme objet potentiellement dangereux, pas comme par exemples
       les armes, les médicaments, l'agro-alimentaire.
       - (pour les 3 derniers) Mise en oeuvre pas étatique, mais plutôt privée,
         voir même auto-régulation.
 - L'usage du logiciel : entreprise utilise logiciel pour contourner législation
 - Conception/stratégie du logiciel 
** Histoire du logicielle :
*** Trois axes en Histoire
- Evolution des caractéristiques techniques des dispositifs
- Biographie des personnages clé
- Histoire intelectuelle des évolutions des porblèmes mathématique et d'ingénierie
*** Histoire sociotechnique (1945-1965)
**** WWII, ENIAC, EDVAC et BINAC
- Dispositifs mécaniques de calcul : fort besoin de calculs pour ballistique,etc.
- Demande en calcul de plus en plus importante.
  - Besoin d'autre chose que de l'analogique
  - En 1943 : projet /Colossus/ pour décrypter le code allemand
  - Aux USA en 1943, projet ENIAC : but est d'accélérer les calculs balisitiques
- Projet ENIAC :
  - Opérationnel en 1946...
  - "Enrôlé" pour résolution d'équation en physique nucléaire \rightarrow ne marche pas bien...
- EDVAC, sucesseur, basé sur le modèle de von Neumann : implémente le concept de "stored-program"
- Personnages clés :
  - von Neumann
  - Eckert
  - Mauchly
- Trois éléments clés :
  - Entrée de la recherche en mathématiques appliquées dans les efforts de guerre
  - Nouvelle configuration géopolitique: Les USA comme superpuissance mondiale
    et montée de l'URSS
  - Formation de nouveau collectifs de recherche qui perdureront une fois la
    guerre terminée
- Concept d'orientation mutuelle
**** 1943-1950 et le /Whirlind Project/
- Les origines :
  - Fin 1941, entrée en guerre, besoin en termes d'aéronautique et de formation au pilotage.
  - L'armée américaine disposait déjà des simulateurs de vols, mais électromécanique
  - *Problème* : pour chaque modèle d'avion, un modèle d'avion spécifique
- 1943, un simulateur universel
  - Labo du MIT
  - Projet confié à Jay Forrester
- De l'analogique au numérique
  - A la base, projet de le faire avec des ordinateurs analogique
  - 1945, Forrester entend parler de l'ordinateur numérique \rightarrow pour lui
    la solution au problème des opérations de calcul en temps réels, mais besoin
    de demande de budget \rightarrow demande acceptée.
- Deux problèmes :
  - Nouveau système de mémoire vive à instaurer, car mémoires actuelles trop lentes
  - Fin de la guerre, projet mis sous la tutelle d'un autre organisme qui lui
    doute de plus en plus de la faisabilité du projet.
- De simulateur à système d'information
  - En 1947, pour justifier les couts, devient un système d'information militaire
  - Budget de plus en plus réduit, en 1949, quasi enterré.
  - Mais en 1949, on apprend que la Russie possède la bombe nucléaire.
- /Whirlind/ repris par la /Air force/ et devient alors le projet SAGE
**** 1950-1963 et le projet SAGE
- 1951 Mémoire électro-statique trop peu performante et fiable \rightarrow une partie du labo est dédiée à la recherche sur la mémoire.
- 1953 Remplacement de la mémoire par de la mémoire à tore magnétique \rightarrow /Whirlind/ devient l'ordinateur le plus puissant et le plus fiable
- 1954-1955 Transfert graduelle de la techno du projet à IBM
- Estimation du coût total du projet depuis la reprise de la /Air Force/ estimée entre 9-16 mia ?
- 23 IBM (basé sur le SAGE) aux USA
- Bilan :
  - En tant que système de commandement, pas eu un rôle très important...
  - Mais a grandement participé à *l'instauration d'une industrie de sous-traitants* actifs dans le domaine de l'information digitale, le traiment du signal, le /hardware/ et surtout le /software/
- IBM en sort fondamentalemnt grandie

****  Quelques enseignements : rôles des croyances :
1. Problématique militaire comme moteur d'innovations technologiques
   - Mise en place de nouvelles communautés de chercheurs
   - Croyance de l'utilité de l'informatique et des mathématiques pour des avancées militaire
2. Instauration d'un modèle de recherche et de développpement qui se répètera dans les décennies suivantes
   - Triangulation et mise en place d'habitudes de travail entre organismes de financment liés à la défense de ...
3. Dès ses débuts, la recherche en informatiquese déploie - malgré elle - en parallèle à cette équation: comment diffuser au mieux des injonctions ?
   - Les concepts de "signaux" et d'"informations" sont fondamentalement liés à des problématiques de gestion et d'encadrement

* Week 3
** Fait d'actualité : Suite de l'affaire VW 
_Quels problèmes le logiciel espion permettrait-il (idéalement) de résoudre ?_
- Entités condensées dans le logiciel 
  - Obama : Loi anti-pollution
  - Toyota (modèle hybrider vs diesel chez VW): Concurrence, but de VW = devenir 1er mondial
  - Diesel
    - Coût de la recherche et développement : dur de réduire les émissions (problème avec lois anti-pollutions)
    - Bluetech : technologie nécessitant hygiène usager, implémentée par Peugeot, mais pas VW, mais inventée à la base par Bosch !
  - PDG de VW
    - Grosse pression sur VW (poussé à devenir 1er mondial), se répercute
  - Oxyde d'azote: émis par moteur diesel, doutes sur son origine
** Histoire du logiciel (1955-1975)
_*Développement important : pourquoi ?*_
*** High-level languages (1955-65)
Avancées précédentes requièrent d'écrire de plus en plus de code et de plus en
plus de débuggage, besoin d'autre chose.

**** Formula translator (Fortran)
- 1957, première version du FORTRAN
- 1958, moitié des ordinateurs gérés par IBM équipés de compilateur FORTRAN
- FORTRAN (et les autres langages de programmation) facilite le travail de programmation
- Utilisation effective des ordinateurs très restreinte, propriété de
  communautés d'élites (professeurs renommés, cadres supérieurs, officiers, etc.)
**** John Kemeny et le BASIC
- Personnage brillant, très doué dans son domaine.
- Bonne connaissance des problèmes
- Ambition :
  - Rendre le plus acessible l'interaction avec un ordinateur
  - Exploiter le potentiel *pédagogique* de ces nouveaux dispositifs.
- Deux problèmes :
  - Aspect ésotérique des langages de programmation, y compris FORTRAN et COBOL
  - Contrainte physique du /batch processing/ qui se prête mal à une utilisation
    à des fins pédagogiques (beaucoup d'utilisateurs)
- Invention du /time-sharing/ :
  - Besoin de deux ordinateurs
  - Un ordinateur faisant les calculs, l'autre gérant les demandes.
  - 1er mai 1964: le Dartmouth Time Sharing System (DTSS) devient opérationnel
- BASIC
  - DTSS permet l'illusion de l'utilisation simultanée d'un ordinateur de
    puissance moyenne.
  - Symétriquement, le DTSS suggère le traitement de "petits" programmes à des
    fins pédagogiques.
  - 1962-64 : En parallèle au développement du DTSS, Kemeny, Kurz et une
    trentaine développent le langage de programmation BASIC
  - Nouvelles entités
    - 1965: /General Electric/ vise la clientèle des universités et de lycées en
      proposant une gamme de systèmes de /time-sharing/ avec compilateur BASIC
    - Différents BASIC sont adaptés pour différents sysyèmes
    - Une nouvelle communauté d'étudinats formés à BASIC émerge
- *4 éléments à retenir*
  1. Le glissement vers des langages de programmation plus intuitif a été
     suggéré par l’augmentation de la puissance des ordinateurs
  2. La configuration quadripartite insuffle le développement de ces nouveaux
     langages ainsi que les innovations de Dartmouth
  3. De cette configuration émerge un nouveau collectif: jeunes étudiants
     capable de s’approprier des ordinateurs dans des espaces quasi-publics
     (lycées, universités)
  4. Les ordinateurs restent cantonnés à une élite, cette fois-ci étudiante
*** Silicon Valley et micro-computer (1955-75)
- Avénement :
  - Pour que ordinateurs deviennet plus acessibles, besoin de l'émergence des
    circuits intégrés.
  - De par leurs caractéristiques techniques (hautes performances, faibles
    coûts), ces circuits intégrés ont à leur tour été enrôlés dans la
    fabrication d’ordinateurs plus compactes mais difficile d’accès
- Les semis conducteurs:
  - William Shockley :
    - Prix nobel de physique
    - Quitte les laboratoires Bell pour aller à /Mountain View/
    - Son statut, ses patentes et les nouvelles possiblités californiennes
      convaiquent plusieurs physiciens importants de le rejoindre, dont *Robert Noyce*
  - 1957, descensions au sein de /Schockley Semiconductor Laboratory/; Employés,
    dont Noyce, quittent le labo de Schockley pour fonder leur propre entreprise.
  - 1957: Mise au point du /planar process/ au sein de la nouvelle entreprise de Noyce.
  - Forte demande militaires avec l'avénement des missiles balistiques
    intercontinentaux, du coup baisse des prix de semis conducteurs.
  - Nouvelle culture d'entreprenariat: parcs scientifiques, investisseurs en
    capital-risque, modèle de la start-up
- DEC et les ordinateurs low-cost
  - 1960 : lancement du PDP-1
    - 20% du prix d'un autre ordinateur de l'époque
    - Produit très "sec", vendu avec peu de composants
  - 1965: Lancement du PDP-8 en intégrant la technologie /Transistor-transistor
    Logic/ rendue peu onéreuse par le /planar process/
  - Performances moyennes mais coûts attractifs; équipe passablement
    d’universités et de petites usines (environ 40 000 exemplaires vendus)
- Altair 8800
  - 1968 : Fondation d'Intel
  - 1971: mise au point de l'Intel 4004, le premier micro-processeur produit industriellement
  - 1974: commercialisation de l'Intel 8080; d'autres enterprisent suivent, donc
    chute des prix.
  - 1975: MITS commercialise l'altair 8800 en se basant sur le microprocesseur
    Intel 8080.
  - Stratégie marchande similaire à DEC, cible clientèle *d'initiés* avec
    (relativement) peu de moyens (à partir de 1800$)
*** Micro-soft (1973-76)
- 1972 : Bill Gates et Paul Allen créent un émulateur de micro-processeur intel
  8008, pas un succès commerciel, mais bonne expérience.
- 1975 : N'ayant pas les moyens de se payer un Altair 8800, l'émule sur un
  ordinateur de leur université. Créent ensuite un compilateur BASIC pour
  l'Altair 8800
- Deux nouvelles instructions
  - *Poke* permet au programmeur d'inscrire une valeur à un emplacement
    spécifique de mémoire.
  - *Peek* permet au programmeur de lire un valeur spécifique à un emplacement spécifique
  - Impossible de supporter ces opérations sur un /Time-Sharing System/.
- 1975 : Démo de l'interpéteur BASIC est un succès, rapidement distribué par MITS
- Vendent un "kit" plus facile d'accès que l'Altair 8800, marché différents.
*** Quelques enseignements:
- *Processus d'enrôlement* : Extension de la configuration à 4 pôles à partir du
  milieu des années 1970 : instances dirigeantes, agences militaires, industrie,
  communautés de recherche et – maintenant – habitats
- *Traces logicielles de problèmes spécifiques* : Les instructions PEEK et POKE
  du langage BASIC sont les traces d’une configuration spécifique: Paul Allen et
  Bill Gates qui doivent modifier un langage conçu pour des installations en
  time-sharing pour l’adapter à un ordinateur conçu – d’après eux – pour être un
  appareil personnel; le glissement entre micro et personnal computer est
  exprimé par l’ajout de ces deux instructions
- *Le concept de /Two-sided software platform/* : Altair BASIC et la création
  d’un double marché:
  - D’un côté, les ordinateurs – et leurs constructeurs – ont
    besoin d’une interface permettant à leurs clients d’interagir avec leur
    produit.
  - De l’autre, l’utilisation de cette interface peut elle-même générer la
    création de produits: jeux-vidéos, petits programmes de gestion et de calcul, etc.
* Week 4
Réponse D
#+attr_html: :style font-size:20px
_Logiciels open source et libres_
** Vérouillage progressif des codes sources
- Au début de la mise en vente de l'Altair BASIC, public issus des université;
  le partage - le plus souvent gratuit - du code est la norme (Comme il se doit
  dans les université, logiciels = objets de recherche).
- Après la fuite de l'interpéteur BASIC, Bill Gates publie en *1976* le pamphlet
  "An open Letter to Hobbyists"; mise en invisibilité du code source et
  instauration de clauses de confidentialité
- Dans les années *1980*, la massification du marché de l’informatique créée une
  clientèle peu concernée par la question de l’accès au code source; la
  démocratisation de l’accès aux ordinateurs a comme effet – pervers pour
  certains, salutaire pour d’autres – de restreindre la circulation des codes sources entre les usagers
** RMS, la FSF et la GPL
*** RMS
- Formé au laboratoire d’intelligence artificielle du MIT; développeur principal d’Emacs
- Bien que soudée, la communauté s’érode au contact des appels de l’industrie
- *1983*: lancement du projet de système d’exploitation GNU
- *1985*: création de la /Free Software Foundation/
***  Logiciel libre
1. Liberté d’ *exécuter* le programme pour tous les usages
2. Liberté d’ *étudier* le fonctionnement du programme, et de l’adapter à ses besoins
3. Liberté de *redistribuer* des copies du logiciel
4. Liberté d’ *améliorer* le programme et de publier ses améliorations
*** La General Public License
- Souvent associée au jeu de mot copyleft
- Pourtant, licence définissant et encadrant les droits des utilisateurs de façon contraignante
- L’utilisateur est en droit de redistribuer un programme acquis sous licence GPL si
  1. Il rend disponible le code source de la version modifiée
  2. Il distribue la version modifiée sous les termes de la GPL
- Si l’utilisateur ne respecte pas ces utilisations, il peut être attaqué par
 l’auteur original en vertu de ses droits d’auteurs
** GNU/Linux
- *1992*: le noyau « Linux » développé par Linus Torvald passe sous licence GPL
- *1994*: la version 1.0 du système d’exploitation GNU/Linux est opérationnel; apparition d’entreprises fournissant des services liés à GNU/Linux
- Des divergences commencent à émerger quant aux contraintes de la licence GPL
- *1998*: création de l’Open Source Initiative (OSI) avec comme but affiché de se distancer des licences GPL
** La Cathédrale et le Bazaar
*Mode « cathédrale »*

Petites communautés travaillant à l’écart du monde au sein d’une organisation
stricte et centralisée (Microsoft, GNU)

*Mode « bazar »*

Mode de travail reposant sur une organisation collective et
décentralisée (Linux)

*Loi de Linus*: « Étant donné suffisamment d’observateurs, tous les bogues sautent aux yeux »
** Le mouvement open-source
- Plutôt qu’un combat politique, Open-Source présenté comme une *méthodologie de développement*
- Des services payants (installation, personnalisation, maintenance)
- apparaissent; gratuité augmente la diffusion des logiciels et donc également le marché potentiel de consommateurs de ces services
- Investissement des grandes entreprises (IBM, Google, Red Hat, Intel) dans le développement de logiciels open-source

Libre et open-source : une distinction à relativiser
-  Les grands projets de logiciels libres ou open-source réunissent le plus
  souvent des sensibilités « libre » et « open-source »; notion de Free and Open
  Source Software (FOSS)
-  Les valeurs véhiculées par ces deux traditions n’empêchent pas l’expression
  d’un travail collaboratif et de plus en plus décentralisé
** 
* Week 5
#+attr_html: :style font-size:20px
_Algorithmes_
** Fait d'actualité
Lors de la mise à jour d'iOS 9, possiblité de développer des /adblockers/ pour le navigateur internet Safari.

Différentes réactions :
- Développeur d'applications "adblocker"
- Réactions d'éditeurs qui font leur revenu sur les publicités
- Vendeurs de publicités sur internet
- Pour certains = la mort d'internet
- Développement le marché qui permet aux publicitaires d'acheter un "contournement" aux /adblockers/
- Regard biaisé des médias, mis en avant comme qqch de nouveau, surtraité, alors qu'existe depuis longtemps
- Première exception qu'Apple fait par rapport à sa politique d'extension web pour les publicités : interroge beaucoup de monde
** PageRank
*** Origine
- Au début d'internet, annuaire d'adresse, indexés à la main
- Ensuite, AltaVista, début d'indexation par contenu
- 1998 arrivée de Google, indexation au delà de contenu, passage à l'hypertexte,
  valorisation des pages par le nombre de liens pointant vers elle
- Brevet déposé en 1998 par Lawrence Page
- En 1998, l'idée est peu originale, simple et largement antérieure
- En 1997, Baidu dépose brevet similaire
- Question de l' *hypercentralité* et des *effets de réseau*
*** Dans l'esprit du pagerank par Cardon :
- Pour google : faire du mond un meilleur endroit
- Pour l'auteur : pagerank est une machine morale
- Sociométrie et scientométrie
  - Sociogramme, Moreno, affinité avec d'autres personnes
  - Scientométrie, en lien avec les citations d'articles scientifiques
- 5 Propriétés de PageRank :
  - *Extériorité* : percepetion globable et non individuelle
  - *Abstraction* : percepetion globable \rightarrow référence devient
    citation (A \rightarrow B devient B \leftarrow A) \rightarrow La référence
    perd la puissance de son contexte (réduction)
  - *Procédurale* : réduction et abstraction \rightarrow automatisation du processus
  - *Neutralité* : réduction, abstraction et procédure \rightarrow
    objectivation de la mesure.
  - *Honnêteté* : l'objectivation supose l'honnêteté des producteurs de citation
  - \rightarrow Suppose l'invisibilité du processus, ne pas encourage à la
    manipulation de la mesure
- Le lien est un vote
  - "PageRank est un champion de la démocratie [...] : tout lien pointant de
    la page A à la page B est considéré comme un vote de la page A en faveur de la page B".
- "La démocratie sur le web fonctionne" dixit Google
- Pondération récursive
  - La citaiton ne suffit pas
  - Les citations des pages les plus citées font en cela plus autorité que d'autres
  - PageRank est une mesure de la « force du lien entrant ».
  - Autorité d'une page \rightarrow autorité des liens \rightarrow autorité d’une page
- Sagesse des foules
  - *Le miracle de l'agrégation*
    - principe du jury de Condorcet (plus grand nombre, le plus différent
      possible, sans influences).
    - Expérience de Galton de 1906 sur le poids d'une vache.
  - *La richesse délibérative des réseaux*
    - sphère publique d'Habermas (1962).
    - la richesse des réseaux de Yochai Benkler (2009).\rightarrow principe d'auto-organisation de la visibilité et de la reconnaissance.
  - *La coordination non-coordonnée*
    - coordination : procédure d'agrégation de la délibération
    - non-coordonnée : les individus n'ont pas l'intention de cette coordination
      \rightarrow présupposition d'honnêteté des individus
    - + présupposition de l'honnêteté de Google
- Google ?
  - Le financement de Google repose sur la publicité.
  - Google repose non seulement sur PageRank (pas si original)
  - mais aussi sur la séparation stricte du classement organique et stratégique \rightarrow PageRank et AdWords / Sagesse des foules et marché.
  - GoTo.com de Bill Gross mélangeait recherche organique et stratégique.
  - Enchères « de Vickrey ».
- Ne pas intervenir manuellement
  - Pourquoi non vendons de la publicité et non des résultats ?
  - L'algorithme reflète l'autorité organique.
  - Objectivité par agrégation de l'inter-subjectivité.
  - Les résultats ne doivent absolument pas être modifié.
  - C'est pourquoi la publicité doit absolument être distinguée des résultats (cf. presse).
  - Les problèmes de classement sont le résultat de l'algorithme et non de
    Google
  - Les ordinateurs sont idiots, c'est pourquoi nous pouvons leur faire confiance.
  - Jugement procédural vs jugement substantiel.
- L'invisibilité
  - Google cherche donc à être invisible.
  - PageRank doit être invisible.
  - Google détourne les sites vers la qualité de leur contenu et non celle de
    l'algorithme. \rightarrow Google est très prescripteur sur les bonnes pratiques et la qualité d'un site.
- Des internautes calculateurs
  - Pour Google, la réputation se mérite ou s'achète.
  - Présupposé de l'honnêteté et de l'invisibilité infondé.
  - contenu ne compte pas \rightarrow créer des liens sans contenus (White hat SEO vs Black hat SEO) .
  - Approche /procédurale/ par opposition à approche /substantielle/ pervertie
  - Considération des /relations/ plutôt que des /contenus/ pervertie.
    \rightarrow Panda (depuis 2011-contenus). (+ Penguin (depuis 2012-liens),
    TrustRank (2005) et nombreuses modifications depuis.)
_La crise du PageRank_

*Popularité*
- 90% du PageRank entre 10% des sites (Pandurangan et al. 2006)
- Logiques des hubs,  (Albert-Laszló Barábasi, 2002)
- « Matthew Effect » (Robert Merton, 1968) et winners takes all.

*Affinités*
- Les réseaux sociaux ont étendu la participation des internautes
- Les "like" et les partages complètent les liens hypertextes.
- + ils échappent pour une large part à Google.

*Efficacité*
- procédures de plus en plus particulières.
- individualisation des processus.
- gestions des exceptions (exemple des juridictions nationales).


_Conclusion_

«  De fait, la machine inventée par Google est devenue si complexe, si sensible aux tests
statistiques qui ne cessent de la reparamétrer, si dévoreuse de variables et de traces, si auto-
apprenante, que ses comportements ne peuvent plus désormais être compris et interprétés,
pas même par ses géniteurs ».
 
*** Relativisation
- Article de 2011, "PageRank is still in use today, but it is now a part of a
  much larger system"
- Google intervient sur de nombreux aspects lors du Ranking
*** Autre article
- L’agrégation de données produites dans des conditions très hétérogènes.
  -  augmentation de leur quantité, réduction de leur qualification, de leur qualité.
  - dissolution du contexte, du sens et réductionnisme.
- Non représentation...
  - de l’ensemble des réalités sociales.
  - de ce qui les constitue singulièrement et subjectivement.
- Effacement du sujet, glissement de l’individu à l’individu statistique.
- Dissolution du sujet dans le réseau.
*** Conclusion
« La gouvernementalité algorithmique [...] contourne et évite les sujets humains
réflexifs, elle se nourrit de données infra-individuelles insignifiantes en elles-
mêmes, pour façonner des modèles de comportements ou profils supra-
individuels sans jamais en appeler au sujet, sans jamais l’appeler à rendre
compte par lui-même de ce qu’il est ni de ce qu’il pourrait devenir»
* Week 6
** Fait d'actualité
App Facebook iOS problème de drain de batterie \rightarrow serait dû au fait que
l'application "traque" la localisation des utilisateurs

Réponse de Facebook : ne traque pas en background d'après eux et possible d'y
désactiver.

Passerait par le VOIP pour contourner le fait que l'application en background ne
peut opérer \rightarrow utilisation justifiée par l'application messenger.

Qu'est-ce qui nourrit le désir de collecter de plus en plus de donnée ?
- Vente de publicités de plus en plus ciblées
- Se rendre de plus en plus pertinent et donc indispensable

Ambiguité de acteurs entre émancipation (chercher, trouver, rencontrer),
services personnels et collectes de données. \rightarrow pratiques utilisés par
d'autres institutions (police, NSA, etc.) \rightarrow Tout cela continue de
marcher si les gens *font confiance*, indispensable

- Anticipations : que va devenir l'entreprise, de quoi aura-t-elle besoin pour
  survivre
** Façonnage social des technologies
- Les acteurs qui façonnent la technologie peuvent être nombreux
- t = résultat de choix (conscients ou pas) faits par des acteurs
  - La manière d'en *parler* (ce qu'elle va faire ou permettre de faire) =
    signification associées à la technique, vision du futur, promesses
  - Les *caractéristiques techniques* = choix de conception, de fonctionnalités,
    d'association à d'autre techiques
- Différentes trajectoires étaient possibles
  - Comprendre les contextes qui contribuent à la définir, à la mettre en forme
    et à orienter le cheminement de son évolution
  - Inversement, la technique agit et façonne la société
** One laptop per child
*** Imagerie
- Idée d'égalité en matière d'éducation
- Imagerie pour enfant
- Couleurs pacifistes
- Ordinateur comme moyen de réaliser des rêves, mais rêves "occidentaux"
- Promesses qui semblent un peu irréaliste \rightarrow mots en décalage avec les
  enfants ? Peut-être hypothèse sur les conséquences 
- Promesses technologiques = les transformations qui viendront grâce à la
  nouvelle technologie
- Technologie qui transforme le monde, _la_ solution pour le futur
- Discours promotionels \rightarrow emballage marketing \rightarrow sans
  conséquences pour le fond ?
*** La technologie ne tombe pas du ciel
- Décision politique : pourquoi ce choix ?
- Soutien de donateurs : d'où vient l'argent ?
- Nombreux acteurs
*** Résultats
- Pas concluants
- Pas de meilleurs résultats scolaire
- Que ce soit en zone urbaine ou rurale
- Peut-être que les test cassiques ne marchent pas
- Enfants de zone rurales ont un peu plus confiance en eux \rightarrow osent
  poursuivre leurs études
- N'arrête pas l'extension du projet
*** Cadrage techno-universaliste
- Croyance qu'un artéfact technologique unique soit une solution universellement
  valable pour tous les utilisateurs, dans n'importe quelle contexte que ce soit
- Cadre et oriente la conception et le développement de la technique
- L'ordinateur va sauver les enfants de l'illetrisme et de la pauvreté
*** Fondamentaliste technologique
- "I have a technology that is goind to change the quality of life"
*** L'ordinateur seul ?
Une technologie produit rarement ses effets toute seule. Elle suppose d'être
associées à d'autres technologies et à un environemment social et matériel
favorable
- inscription de la nouvelle technologie dans un contexte localisation
- Environnement pour la technologie ?
- Batterie, accessoires ?
- Web ?
- Intégration de l'outil dans la classe
- Instituteur ?

